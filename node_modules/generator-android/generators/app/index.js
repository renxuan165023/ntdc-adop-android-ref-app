'use strict';

const generator = require('yeoman-generator');
const mkdirp = require('mkdirp');
const yosay = require('yosay');
const chalk = require('chalk');

module.exports = generator.Base.extend({
  initializing: function () {
    this.props = {};   
  },

  setupVars: function () {     
      this.props.appPackage = this.config.get('package');
      this.appName = this.config.get('name');
      this.appPackage = this.config.get('package');
      this.androidTargetSdkVersion = this.config.get('targetSdk');
      this.androidMinSdkVersion = this.config.get('minSdk');   
  },

  writing: function () {
    var packageDir = this.props.appPackage.replace(/\./g, '/');

    mkdirp('app');
    mkdirp('app/src/main/assets');
    mkdirp('app/src/main/java/' + packageDir);
    mkdirp('app/src/androidTest/java/' + packageDir);
    mkdirp('app/src/commonTest/java/' + packageDir);
    mkdirp('app/src/debug');
    mkdirp('app/src/release');
    mkdirp('app/src/test/java/' + packageDir);

    this.copy('gitignore', '.gitignore');
    this.copy('build.gradle', 'build.gradle');
    this.copy('gradle.properties', 'gradle.properties');
    this.copy('gradlew', 'gradlew');
    this.copy('gradlew.bat', 'gradlew.bat');
    this.copy('settings.gradle', 'settings.gradle');
    this.copy('app/gitignore', 'app/.gitignore');
    this.copy('app/proguard-rules.pro', 'app/proguard-rules.pro');

    this.directory('gradle', 'gradle');
    this.directory('config', 'config');
    this.directory('app/src/main/assets', 'app/src/main/assets');
    this.directory('app/src/main/res', 'app/src/main/res', this, {});

    this.template('README.md', 'README.md');
    this.template('app/build.gradle', 'app/build.gradle');
    this.template('app/src/androidTest/java/in/mvpstarter/sample', 'app/src/androidTest/java/' + packageDir, this, {});
    this.template('app/src/commonTest/java/in/mvpstarter/sample', 'app/src/commonTest/java/' + packageDir, this, {});
    this.template('app/src/debug/AndroidManifest.xml', 'app/src/debug/AndroidManifest.xml');
    this.template('app/src/debug/res', 'app/src/debug/res', this, {});
    this.template('app/src/main/AndroidManifest.xml', 'app/src/main/AndroidManifest.xml');
    this.template('app/src/main/java/in/mvpstarter/sample', 'app/src/main/java/' + packageDir, this, {});
    this.template('app/src/main/res/layout', 'app/src/main/res/layout', this, {});
    this.template('app/src/release/res', 'app/src/release/res', this, {});
    this.template('app/src/test/java/in/mvpstarter/sample', 'app/src/test/java/' + packageDir, this, {});
  }
});
